version: '3.8'

services:
  # ===== APPLICATION =====
  agrotech-app:
    image: ghcr.io/convey4you/agente_agricola/agrotech-app:latest
    container_name: agrotech-staging
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=staging
      - DATABASE_URL=postgresql://agrotech_staging:${POSTGRES_PASSWORD}@postgres:5432/agrotech_staging
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - SENTRY_DSN=${SENTRY_DSN}
      - MAIL_SERVER=${MAIL_SERVER}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_USE_TLS=true
      - MAIL_DEFAULT_SENDER=${MAIL_DEFAULT_SENDER}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - app_logs:/app/logs
      - app_uploads:/app/uploads
    networks:
      - agrotech-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.agrotech-staging.rule=Host(`staging.agrotech.convey4you.com`)"
      - "traefik.http.routers.agrotech-staging.tls=true"
      - "traefik.http.routers.agrotech-staging.tls.certresolver=letsencrypt"
      - "traefik.http.services.agrotech-staging.loadbalancer.server.port=5000"

  # ===== DATABASE =====
  postgres:
    image: postgres:15-alpine
    container_name: postgres-staging
    restart: unless-stopped
    environment:
      - POSTGRES_DB=agrotech_staging
      - POSTGRES_USER=agrotech_staging
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - agrotech-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U agrotech_staging -d agrotech_staging"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements
      -c pg_stat_statements.track=all
      -c max_connections=100
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200

  # ===== CACHE =====
  redis:
    image: redis:7-alpine
    container_name: redis-staging
    restart: unless-stopped
    volumes:
      - redis_data:/data
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - agrotech-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: redis-server /usr/local/etc/redis/redis.conf
    sysctls:
      - net.core.somaxconn=1024

  # ===== REVERSE PROXY =====
  traefik:
    image: traefik:v3.0
    container_name: traefik-staging
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Dashboard
    environment:
      - TRAEFIK_API_DASHBOARD=true
      - TRAEFIK_API_INSECURE=true
      - TRAEFIK_PROVIDERS_DOCKER=true
      - TRAEFIK_PROVIDERS_DOCKER_EXPOSEDBYDEFAULT=false
      - TRAEFIK_ENTRYPOINTS_WEB_ADDRESS=:80
      - TRAEFIK_ENTRYPOINTS_WEBSECURE_ADDRESS=:443
      - TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_EMAIL=${ACME_EMAIL}
      - TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_STORAGE=/acme.json
      - TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_HTTPCHALLENGE_ENTRYPOINT=web
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_acme:/acme.json
    networks:
      - agrotech-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik-staging.agrotech.convey4you.com`)"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"

  # ===== MONITORING =====
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-staging
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - agrotech-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'

  grafana:
    image: grafana/grafana:latest
    container_name: grafana-staging
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./config/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - agrotech-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana-staging.rule=Host(`grafana-staging.agrotech.convey4you.com`)"
      - "traefik.http.routers.grafana-staging.tls=true"
      - "traefik.http.routers.grafana-staging.tls.certresolver=letsencrypt"
      - "traefik.http.services.grafana-staging.loadbalancer.server.port=3000"

  # ===== LOG AGGREGATION =====
  loki:
    image: grafana/loki:latest
    container_name: loki-staging
    restart: unless-stopped
    ports:
      - "3100:3100"
    volumes:
      - ./config/loki.yml:/etc/loki/local-config.yaml:ro
      - loki_data:/loki
    networks:
      - agrotech-network
    command: -config.file=/etc/loki/local-config.yaml

  promtail:
    image: grafana/promtail:latest
    container_name: promtail-staging
    restart: unless-stopped
    volumes:
      - ./config/promtail.yml:/etc/promtail/config.yml:ro
      - app_logs:/var/log/app:ro
      - /var/log:/var/log:ro
    networks:
      - agrotech-network
    command: -config.file=/etc/promtail/config.yml

# ===== VOLUMES =====
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  app_logs:
    driver: local
  app_uploads:
    driver: local
  traefik_acme:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  loki_data:
    driver: local

# ===== NETWORKS =====
networks:
  agrotech-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
